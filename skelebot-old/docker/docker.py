from .extensionCommands import extensionCommands

def buildDockerfile(config):
    # Setup the basics of all dockerfiless
    docker  = "# This Dockerfile was generated by Skelebot\n"
    docker += "# Editing this file manually is not advised as all changes will be overwritten during Skelebot execution\n"
    docker += "FROM {baseImage}\n".format(baseImage=config.getBaseImage())
    docker += "MAINTAINER {maintainer} <{contact}>\n".format(maintainer=config.maintainer, contact=config.contact)
    docker += "WORKDIR /app\n"

    # Add RUN commands
    if (config.commands):
        for command in config.commands:
            docker += "RUN [\"{command}\"]".format(command="\", \"".join(command.split(" ")))
            docker += "\n"

    # Add language dependencies
    pyInstall = "RUN [\"pip\", \"install\", \"{dep}\"]\n"
    rInstall = "RUN [\"Rscript\", \"-e\", \"install.packages('{dep}', repo='https://cloud.r-project.org'); library({dep})\"]\n"
    rInstallVersion = "RUN [\"Rscript\", \"-e\", \"library(devtools); install_version('{depName}', version='{version}', repos='http://cran.us.r-project.org'); library({depName})\"]\n"
    rGitHubInstall = "RUN [\"Rscript\", \"-e\", \"library(devtools); install_github('{depPath}'); library({depName})\"]\n"
    rFileInstall = "COPY {depPath} {depPath}\n"
    rFileInstall += "RUN [\"Rscript\", \"-e\", \"install.packages('/app/{depPath}', repos=NULL, type='source'); library({depName})\"]\n"

    if ("Python" == config.language):
        for dep in config.dependencies:
            docker += pyInstall.format(dep=dep)
    if ("R" == config.language):
        for dep in config.dependencies:
            depSplit = dep.split(":")
            if ("github:" in dep):
                docker += rGitHubInstall.format(depPath=depSplit[1], depName=depSplit[2])
            elif ("file:" in dep):
                docker += rFileInstall.format(depPath=depSplit[1], depName=depSplit[2])
            elif ("=" in dep):
                verSplit = dep.split("=")
                docker += rInstallVersion.format(depName=verSplit[0], version=verSplit[1])
            else:
                docker += rInstall.format(dep=dep)

    docker += "COPY . /app\n"

    # Add the COPY commands to the bottom of the Dockerfile
    if (config.copy != None):
        for copy in config.copy:
            docker += "COPY {src} {dest}\n".format(src=copy.split(":")[0], dest=copy.split(":")[1])

    # Final Kerberos setup
    if (config.kerberos != None):
        docker += "COPY {krb} /etc/krb5.conf\n".format(krb=config.kerberos.krbConf)
        docker += "COPY {keytab} /krb/auth.keytab\n".format(keytab=config.kerberos.keytab)

    # Set the CMD to execute the primary job by default (if there is one)
    runJob = None
    ext = None
    for job in config.jobs:
        if config.primaryJob == job.name:
            runJob = job
            ext = runJob.source.split(".")[1]
            docker += "CMD [\"/bin/bash\", \"-c\", \"'{command}'\"]\n".format(command=extensionCommands[ext] + runJob.source)

    return docker

